Question 1] 

int maxfun()
{
    int temp=stack[top];
    for(int i=top-1;i>=0;i--)
    {
        if(stack[i]>temp)
        {
            temp=stack[i];
        }
    }
    return temp;
}

Question 2]

int minfun()
{
    int temp=stack[top];
    for(int i=top-1;i>=0;i--)
    {
        if(stack[i]<temp)
        {
            temp=stack[i];
        }
    }
    return temp;
}


//C program implementation


#include<stdio.h>
#define MAX 50
void push(int);
void display();
int maxfun();
int minfun();
int top=-1;
int stack[MAX];
void main()
{
    int n,ele;
    printf("Enter the size of stack: ");
    scanf("%d",&n);
    printf("Enter the stack elements: ");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&ele);
        push(ele);
    }
    printf("Stack elements are: \n");
    display();
    printf("\nMaximum element is: %d",maxfun());
    printf("\nMinimum element is: %d",minfun());

}
void push(int ele)
{
   if(top==MAX-1)
   {
       printf("Overflow");
       return;
   }
   top++;
   stack[top]=ele;
}
int maxfun()
{
    int temp=stack[top];
    for(int i=top-1;i>=0;i--)
    {
        if(stack[i]>temp)
        {
            temp=stack[i];
        }
    }
    return temp;
}
int minfun()
{
    int temp=stack[top];
    for(int i=top-1;i>=0;i--)
    {
        if(stack[i]<temp)
        {
            temp=stack[i];
        }
    }
    return temp;
}
void display()
{
    if(top==-1)
    {
        printf("Underflow");
        return;
    }
    int temp;
    temp=top;
    while(temp!=-1)
    {
        printf("%d\t",stack[temp]);
        temp--;
    }
}
